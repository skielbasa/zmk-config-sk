/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&sk {
    release-after-ms = <666>;

    /delete-property/ ignore-modifiers;
};

/ {
    macros {
        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&none>,
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AUTOSHIFT_KEYPRESS";
        };

        shift: with_lshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "KEY_PRESS_WITH_LEFT_SHIFT_MODIFIER";
        };

        rgblayer: rgb_layer {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_2to2 &rgb_ug RGB_COLOR_HSB_CMD MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&rgb_ug RGB_TOG>;

            label = "MOMENTARY_LAYER_WITH_RGB_SELECTION";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        delete_lower: delete_lower {
            compatible = "zmk,behavior-tap-dance";
            label = "DELETE_LOWER";
            #binding-cells = <0>;
            bindings = <&kp DEL>, <&rgblayer RGB_COLOR_HSB_VAL(154,68,56) 1>;

            tapping-term-ms = <190>;
        };

        return_raise: return_raise {
            compatible = "zmk,behavior-tap-dance";
            label = "RETURN_RAISE";
            #binding-cells = <0>;
            bindings = <&kp RET>, <&rgblayer RGB_COLOR_HSB_VAL(221,80,48) 2>;

            tapping-term-ms = <190>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   \   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | C/ESC |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |  C/'  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PLAY  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | CAPS| ALT  | GUI/-| SPACE|LOWER/[ |  |RAISE/]| ENTER|  GUI/=|  ALT  | CTRL |

            bindings = <
&kp GRAVE      &kp N1  &kp N2     &kp N3    &kp N4          &kp N5                                            &kp N6     &kp N7          &kp N8     &kp N9     &kp N0    &kp BSLH
&kp TAB        &kp Q   &kp W      &kp E     &kp R           &kp T                                             &kp Y      &kp U           &kp I      &kp O      &kp P     &mt RIGHT_BRACKET LEFT_BRACKET
&mt LCTRL ESC  &kp A   &kp S      &kp D     &kp F           &kp G                                             &kp H      &kp J           &kp K      &kp L      &kp SEMI  &mt RCTRL SQT
&kp LSHFT      &kp Z   &kp X      &kp C     &kp V           &kp B          &kp C_PLAY_PAUSE    &kp GLOBE      &kp N      &kp M           &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                       &kp LCTRL  &kp LALT  &mt LGUI MINUS  &kp BACKSPACE  &delete_lower       &delete_lower  &kp SPACE  &mt RGUI EQUAL  &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |       |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
            // |       |  -  |  _  |  [   |  {   |  \   |        |  |       |  |   |  }    |  ]    |  =   |   +   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                               &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                               &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                            &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &trans
&trans  &kp MINUS  &kp UNDER  &kp LBKT  &kp LBRC  &kp BSLH           &trans    &trans  &kp PIPE   &kp RBRC  &kp RBKT         &kp EQUAL  &kp PLUS  &trans
                   &trans     &trans    &trans    &ext_power EP_TOG  &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |     |  F1  |  F2  |  F3   |  F4   |  F5  |                |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
            // |     | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | PGUP |  END |   ^   | HOME |  INS  |  F12  |
            // |     | RGBT | RGB- | RGB+  |  BR-  |  BR+ |                | PGDN |   <- |   v   | ->   |  DEL  | C/CAPS|
            // |     |BTCLR | HUD  | HUI   |  SAD  |  SAI |      |  |      | SCRL | PRVS | PLAY  | NEXT |  PSCR |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                             &kp F6             &kp F7         &kp F8        &kp F9      &kp F10    &kp F11
&trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                       &kp PG_UP          &kp PAGE_DOWN  &kp HOME      &kp END     &kp INS    &kp F12
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                    &kp LEFT           &kp DOWN       &kp UP_ARROW  &kp RIGHT   &kp DEL    &mt RCTRL CLCK
&trans  &bt BT_CLR       &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans    &trans  &kp SLCK           &kp C_PREV     &kp C_PP      &kp C_NEXT  &kp PSCRN  &trans
                         &trans           &trans           &trans           &trans           &trans    &trans  &ext_power EP_TOG  &trans         &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        BOTH_LAYER {
            bindings = <
&none  &none  &none   &none   &none   &none                        &none    &kp LOCKING_NUM  &kp FSLH   &kp STAR         &kp MINUS  &none
&none  &none  &none   &none   &none   &none                        &kp TAB  &kp KP_NUMBER_7  &kp KP_N8  &kp KP_N9        &kp PLUS   &none
&none  &none  &none   &none   &none   &kp GLOBE                    &none    &kp KP_N4        &kp KP_N5  &kp KP_NUMBER_6  &kp RET    &none
&none  &none  &none   &none   &none   &none      &none     &none   &none    &kp KP_N1        &kp KP_N2  &kp KP_N3        &kp RET    &none
              &trans  &trans  &trans  &trans     &trans    &trans  &trans   &kp KP_N0        &kp KP_N0  &kp DOT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
